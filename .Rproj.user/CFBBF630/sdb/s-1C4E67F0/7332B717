{
    "contents" : "# server.R\n\nlibrary(gplots)\n\nshinyServer(\n  function(input, output) {\n    \n    output$selectStrains = renderUI({\n      if (input$selectAllStrains == TRUE) {\n        checkboxGroupInput(inputId = 'strains', \n                           label = h3('Mouse Strains'), \n                           choices = rownames(mousedata),\n                           selected = rownames(mousedata))\n      } else {\n        checkboxGroupInput(inputId = 'strains', \n                           label = h3('Mouse Strains'), \n                           choices = rownames(mousedata),\n                           vector(mode=\"character\", length=0))\n      }    \n    })\n    \n    output$selectRegions = renderUI({\n      if (input$selectAllRegions == TRUE) {\n        checkboxGroupInput(inputId = 'regions', \n                           label = h3('Brain Regions'), \n                           choices = colnames(mousedata),\n                           selected = colnames(mousedata))\n      } else {\n        checkboxGroupInput(inputId = 'regions', \n                           label = h3('Brain Regions'), \n                           choices = colnames(mousedata),\n                           vector(mode=\"character\", length=0))\n      }    \n    })\n    \n    output$heatmap = renderPlot({\n      # Take a dependency on input$recalculate\n      input$recalculate\n      \n      # Add error checking for input$strains and input$regions >= 2.  At least one of them must be greater than 2\n      # to perform clustering.\n      \n      # Use isolate() to avoid dependency on input$strains and input$regions\n      mousedatamat = as.matrix(mousedata[isolate(input$strains), isolate(input$regions)])\n      nr = dim(mousedatamat)[1]\n      nc = dim(mousedatamat)[2]\n      \n#       # Prevent error when rendering the first time, since uiOutputs are not rendered yet\n#       if ((nr >= 2) && (nc >= 2)) {\n#         heatmap.2(mousedatamat, distfun=jdfs, col=bluered, margins=c(8,14), trace=\"none\", cexRow = 0.2 + 2/log10(nr), cexCol = 0.2 + 2/log10(nc), density.info=\"histogram\", keysize=0.8, symkey=TRUE, symbreaks=TRUE)     \n#       }\n      \n      if (min(dim(mousedatamat)) != 0) {\n        heatmap.2(mousedatamat, distfun=jdfs, col=bluered, margins=c(8,14), trace=\"none\", cexRow = 0.2 + 2/log10(nr), cexCol = 0.2 + 2/log10(nc), density.info=\"histogram\", keysize=0.8, symkey=TRUE, symbreaks=TRUE)     \n      }\n    })\n  }\n)",
    "created" : 1421703657957.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1198079943",
    "id" : "7332B717",
    "lastKnownWriteTime" : 1421778400,
    "path" : "~/Documents/Code/R/ClusterMouseAutism/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}